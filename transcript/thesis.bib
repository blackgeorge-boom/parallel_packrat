@book{Aho2006,
author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
year = {2006},
isbn = {0321486811},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA}
}
@article{Ford2004,
abstract = {For decades we have been using Chomsky's generative system of grammars, particularly context-free grammars (CFGs) and regular expressions (REs), to express the syntax of programming languages and protocols. The power of generative grammars to express ambiguity is crucial to their original purpose of modelling natural languages, but this very power makes it unnecessarily difficult both to express and to parse machine-oriented languages using CFGs. Parsing Expression Grammars (PEGs) provide an alternative, recognition-based formal foundation for describing machine-oriented syntax, which solves the ambiguity problem by not introducing ambiguity in the first place. Where CFGs express nondeterministic choice between alternatives, PEGs instead use prioritized choice. PEGs address frequently felt expressiveness limitations of CFGs and REs, simplifying syntax definitions and making it unnecessary to separate their lexical and hierarchical components. A linear-time parser can be built for any PEG, avoiding both the complexity and fickleness of LR parsers and the inefficiency of generalized CFG parsing. While PEGs provide a rich set of operators for constructing grammars, they are reducible to two minimal recognition schemas developed around 1970, TS/TDPL and gTS/GTDPL, which are here proven equivalent in effective recognition power.},
author = {Ford, Bryan},
doi = {10.1145/982962.964011},
file = {:home/blackgeorge/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ford - 2004 - Parsing expression grammars A recognition-based syntactic foundation.pdf:pdf},
isbn = {158113729X},
issn = {07308566},
journal = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
keywords = {BNF,Context-free grammars,GTDPL,Lexical analysis,Packrat parsing,Parsing expression grammars,Regular expressions,Scannerless parsing,Syntactic predicates,TDPL,Unified grammars},
mendeley-groups = {Packrat/foundation},
pages = {111--122},
title = {{Parsing expression grammars: A recognition-based syntactic foundation}},
volume = {31},
year = {2004}
}
@article{Ford2002,
abstract = {Packrat parsing is a novel technique for implementing parsers in a lazy functional programming language. A packrat parser provides the power and flexibility of top-down parsing with backtracking and unlimited lookahead, but nevertheless guarantees linear parse time. Any language defined by an LL(k) or LR(k) grammar can be recognized by a packrat parser, in addition to many languages that conventional linear-time algorithms do not support. This additional power simplifies the handling of common syntactic idioms such as the widespread but troublesome longest-match rule, enables the use of sophisticated disambiguation strategies such as syntactic and semantic predicates, provides better grammar composition properties, and allows lexical analysis to be integrated seamlessly into parsing. Yet despite its power, packrat parsing shares the same simplicity and elegance as recursive descent parsing; in fact converting a back-tracking recursive descent parser into a linear-time packrat parser often involves only a fairly straightforward structural change. This paper describes packrat parsing informally with emphasis on its use in practical applications, and explores its advantages and disadvantages with respect to the more conventional alternatives.},
author = {Ford, Bryan},
doi = {10.1145/583852.581483},
file = {:home/blackgeorge/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ford - 2002 - Packrat parsing Simple, powerful, lazy, linear time - Functional pearl.pdf:pdf},
isbn = {1581134878},
issn = {0362-1340},
journal = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
keywords = {all or part of,analysis,backtracking,haskell,lexical,memoization,or,or hard copies of,parser combinators,permission to make digital,scannerless parsing,this work for personal,top-down parsing},
mendeley-groups = {Packrat/foundation},
pages = {36--47},
title = {{Packrat parsing: Simple, powerful, lazy, linear time - Functional pearl}},
year = {2002}
}
@article{Ford2002a,
abstract = {Packrat parsing is a novel and practical method for implementing linear-time parsers for grammars defined in Top-Down Parsing Language (TDPL). While TDPL was originally created as a formal model for top-down parsers with backtracking capability, this thesis extends TDPL into a powerful general-purpose notation for describing language syntax, providing a compelling alternative to traditional context-free grammars (CFGs). Common syntactic idioms that cannot be represented concisely in a CFG are...},
author = {Ford, Bryan},
file = {:home/blackgeorge/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ford - 2002 - Packrat Parsing a Practical Linear-Time Algorithm with Backtracking by.pdf:pdf},
journal = {Proceedings of the International Conference on Functional Programming ICFP 2002},
mendeley-groups = {Packrat/foundation},
title = {{Packrat Parsing : a Practical Linear-Time Algorithm with Backtracking by}},
url = {http://scholar.google.com/scholar?hl=en{\&}btnG=Search{\&}q=intitle:Packrat+Parsing:+a+Practical+Linear-Time+Algorithm+with+Backtracking{\#}0},
year = {2002}
}
@inproceedings{Moore2000,
author = {Moore, Robert C.},
title = {Removing Left Recursion from Context-Free Grammars},
year = {2000},
publisher = {Association for Computational Linguistics},
address = {USA},
booktitle = {Proceedings of the 1st North American Chapter of the Association for Computational Linguistics Conference},
pages = {249–255},
numpages = {7},
location = {Seattle, Washington},
series = {NAACL 2000}
}
@inproceedings{Warth2008,
author = {Moore, Robert C.},
title = {Removing Left Recursion from Context-Free Grammars},
year = {2000},
publisher = {Association for Computational Linguistics},
address = {USA},
booktitle = {Proceedings of the 1st North American Chapter of the Association for Computational Linguistics Conference},
pages = {249–255},
numpages = {7},
location = {Seattle, Washington},
series = {NAACL 2000}
}
